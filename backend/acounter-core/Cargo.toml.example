[package]
name = "fortnox-cli" 
version = "0.1.0"
edition = "2021"
authors = ["Your Name <your.email@example.com>"] # Uppdatera med din info
description = "Fetches Fortnox time entries and saves to CSV"
repository = "https://github.com/yourusername/fortnox-fetcher" # Uppdatera med din info
license = "MIT OR Apache-2.0"

[dependencies]
# Async runtime
tokio = { version = "1.33.0", features = ["full"] } # Simplified features for CLI

# Serialization
serde = { version = "1.0.192", features = ["derive"] }
serde_json = "1.0.108"

# Logging and tracing
tracing = "0.1.40"
tracing-subscriber = { version = "0.3.17", features = ["env-filter"] }

# CLI Argument Parsing
clap = { version = "4.5", features = ["derive"] }

# HTTP client
reqwest = { version = "0.11.22", features = ["json", "rustls-tls"] } # Using rustls-tls

# Date and time (Used in status display)
chrono = { version = "0.4.31", features = ["serde"] }

# Configuration and utilities
dotenv = "0.15.0"
# envy = "0.4.2" # Removed, using std::env directly now
thiserror = "1.0.50"
# async-trait = "0.1.74" # Not strictly needed with current structure

# URL Handling
url = "2.5.0"

# Random Generation
rand = { version = "0.8", features = ["std_rng"] }

# Base64 Encoding
base64 = "0.21"

# Directory Handling (for token file path)
dirs = "5.0" # Added for finding home directory

# CSV Handling (Keep if you plan to add CSV export later)
# csv = "1.3"

[dev-dependencies]
# Testing utilities (Uncomment and add specific ones if needed)
# tokio-test = "0.4.3"
# mockall = "0.11.4"
# wiremock = "0.5.19"

# # Async runtime
# tokio = { version = "1.33.0", features = ["full", "macros", "rt-multi-thread", "sync"] }

# # Web framework and HTTP
# axum = { version = "0.7.9", features = ["macros"] }
# tower = "0.4.13"
# tower-http = { version = "0.5.0", features = ["trace"] }

# # Authentication and security
# # jsonwebtoken = "9.1.0" # Not needed for this specific task
# # governor = "0.6.0" # Not needed for this specific task

# # Database
# # sqlx = { version = "0.7", features = ["runtime-tokio-native-tls", "postgres", "chrono", "uuid", "json"] } # Kommentera ut om ej relevant för detta specifika syfte
# # uuid = { version = "1.5", features = ["v4", "serde"] } # Kommentera ut om ej relevant

# # Serialization
# serde = { version = "1.0.192", features = ["derive"] }
# serde_json = "1.0.108"

# # Logging and tracing
# tracing = "0.1.40"
# tracing-subscriber = { version = "0.3.17", features = ["env-filter"] }

# # CLI 
# clap = { version = "4.5", features = ["derive"] } 

# # Email
# # lettre = { version = "0.11", features = ["tokio1", "tokio1-native-tls", "builder"] } # Kommentera ut om ej relevant

# # HTTP client
# reqwest = { version = "0.11.22", features = ["json", "rustls-tls"] } # Using rustls-tls for better cross-platform compatibility

# # Date and time
# chrono = { version = "0.4.31", features = ["serde"] }

# # Configuration and utilities
# dotenv = "0.15.0"
# envy = "0.4.2" # Can use this or just std::env for simplicity here
# thiserror = "1.0.50"
# async-trait = "0.1.74"

# # CSV Handling
# csv = "1.3"

# # URL Handling <--- ADDED
# url = "2.5.0"

# # Random Generation <--- ADDED
# rand = { version = "0.8", features = ["std_rng"] }

# # Base64 Encoding <--- ADDED
# base64 = "0.21" # Check for latest version if desired

# [dev-dependencies]
# # Testing utilities
# # tokio-test = "0.4.3"
# # mockall = "0.11.4"
# # wiremock = "0.5.19"

[profile.release]
# Optimization settings
opt-level = 3
lto = true
codegen-units = 1
panic = 'abort'
strip = true

[profile.dev]
# Developer experience improvements
opt-level = 0
debug = true


[package]
name = "acounter-core"
version = "0.1.0"
edition = "2021"
authors = ["Your Name <your.email@example.com>"] # Uppdatera med din info
description = "A flexible alert system with multiple notification channels"
repository = "https://github.com/yourusername/alert-system" # Uppdatera med din info
license = "MIT OR Apache-2.0"

[dependencies]
# Async runtime
tokio = { version = "1.33.0", features = ["full", "macros", "rt-multi-thread"] }

# Web framework and HTTP
axum = { version = "0.7.9", features = ["macros"] }
tower = "0.4.13"
tower-http = { version = "0.5.0", features = ["trace"] }

# Authentication and security
jsonwebtoken = "9.1.0"
governor = "0.6.0"

# Database
# sqlx = { version = "0.7", features = ["runtime-tokio-native-tls", "postgres", "chrono", "uuid", "json"] } # Kommentera ut om ej relevant för detta specifika syfte
# uuid = { version = "1.5", features = ["v4", "serde"] } # Kommentera ut om ej relevant

# Serialization
serde = { version = "1.0.192", features = ["derive"] }
serde_json = "1.0.108"

# Logging and tracing
tracing = "0.1.40"
tracing-subscriber = { version = "0.3.17", features = ["env-filter"] }

# Email
# lettre = { version = "0.11", features = ["tokio1", "tokio1-native-tls", "builder"] } # Kommentera ut om ej relevant

# HTTP client
reqwest = { version = "0.11.22", features = ["json", "rustls-tls"] }

# Date and time
chrono = { version = "0.4.31", features = ["serde"] }

# Configuration and utilities
dotenv = "0.15.0"
envy = "0.4.2"
thiserror = "1.0.50"
async-trait = "0.1.74"

# CSV Handling <--- LADE TILL DENNA
csv = "1.3"

[dev-dependencies]
# Testing utilities
tokio-test = "0.4.3"
mockall = "0.11.4"
wiremock = "0.5.19"

[profile.release]
# Optimization settings
opt-level = 3
lto = true
codegen-units = 1
panic = 'abort'

[profile.dev]
# Developer experience improvements
opt-level = 0
debug = true